(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{736:function(o,v,_){"use strict";_.r(v);var e=_(4),a=Object(e.a)({},(function(){var o=this,v=o.$createElement,_=o._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[_("h2",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[o._v("#")]),o._v(" 前言")]),o._v(" "),_("p",[o._v("相信大家在写JS函数的方法时，都用过"),_("code",[o._v("this")]),o._v("关键字来给构造函数增加变量。但我们用"),_("code",[o._v("this")]),o._v("时我们都疑惑过，"),_("code",[o._v("this")]),o._v("到底绑定的是什么呢？"),_("code",[o._v("this")]),o._v("关键字是JS中最复杂的机制之一。它是一个很特别的关键字，在我们使用它时，它便被自动定义在了所有函数的作用域中。下面我就来和大家聊聊"),_("code",[o._v("this")]),o._v("的用法。")]),o._v(" "),_("h2",{attrs:{id:"this的绑定规则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#this的绑定规则"}},[o._v("#")]),o._v(" this的绑定规则")]),o._v(" "),_("h4",{attrs:{id:"默认绑定"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#默认绑定"}},[o._v("#")]),o._v(" - 默认绑定")]),o._v(" "),_("ol",[_("li",[o._v("this所处的词法作用域在哪里生效了，this就绑定在哪里。")]),o._v(" "),_("li",[o._v("在严格模式下，全局对象无法进行默认绑定，所以导致this只能绑定在undifined身上\n我们来看这段代码：")])]),o._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[o._v("function baz(){\n    console.log('baz');\n    bar()\n}\nfunction bar(){\n    console.log('bar');\n    foo()\n}\nfunction foo(){\n    console.log('foo');\n    console.log(this);\n}\nbaz()\n")])])]),_("p",[o._v("我们定义了三个函数"),_("code",[o._v("foo")]),o._v("、"),_("code",[o._v("bar")]),o._v("、"),_("code",[o._v("baz")]),o._v("，我们在"),_("code",[o._v("foo")]),o._v("函数中打印"),_("code",[o._v("this")]),o._v("，再在"),_("code",[o._v("bar")]),o._v("中调用"),_("code",[o._v("foo")]),o._v("函数，再在"),_("code",[o._v("baz")]),o._v("中调用"),_("code",[o._v("bar")]),o._v("函数，最后我们执行"),_("code",[o._v("baz")]),o._v("。因为这"),_("code",[o._v("baz")]),o._v("函数是在全局对象"),_("code",[o._v("window")]),o._v("上定义的，所以这里的打印的"),_("code",[o._v("this")]),o._v("指代的就是全局对象"),_("code",[o._v("window")]),o._v("。这便是是"),_("code",[o._v("this")]),o._v("的默认绑定规则。但要注意的一点就是如果在baz函数中加入"),_("code",[o._v("'use strict'")]),o._v("代码进入严格模式时,"),_("code",[o._v("this")]),o._v("将无法默认绑定在全局对象中，导致"),_("code",[o._v("this")]),o._v("只能绑定在"),_("code",[o._v("undifind")]),o._v("身上.\n，\n"),_("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e8b3f36064b548e09830499d40ca1f70~tplv-k3u1fbpfcp-watermark.image?",alt:"屏幕截图(75).png"}})]),o._v(" "),_("h4",{attrs:{id:"隐式绑定"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#隐式绑定"}},[o._v("#")]),o._v(" - 隐式绑定")]),o._v(" "),_("ol",[_("li",[o._v("当函数引用有上下文对象时，隐式绑定的规则就会把函数调用中的this绑定到这个上下文对象。\n我们来看这段代码")])]),o._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[o._v("function foo(){\n    console.log(this.a);\n}\nvar obj = {\n    a:2,\n    foo: foo\n}\nobj.foo()\n")])])]),_("p",[o._v("我们定义了"),_("code",[o._v("foo")]),o._v("函数、"),_("code",[o._v("obj")]),o._v("对象。我们在"),_("code",[o._v("obj")]),o._v("对象中定义"),_("code",[o._v("foo:foo")]),o._v("键值对,将"),_("code",[o._v("foo")]),o._v("函数在"),_("code",[o._v("obj")]),o._v("对象中引用，之后我们在来在外面执行"),_("code",[o._v("foo")]),o._v("函数。在这种情况下，我们"),_("code",[o._v("this.a")]),o._v("打印的值就是"),_("code",[o._v("2")]),o._v("了。这就是因为当我们在"),_("code",[o._v("obj")]),o._v("对象引用"),_("code",[o._v("foo")]),o._v("函数时，"),_("code",[o._v("this")]),o._v("会隐式绑定在这个有执行上下文的"),_("code",[o._v("obj")]),o._v("对象上。所以当我们执行"),_("code",[o._v("foo")]),o._v("函数时，"),_("code",[o._v("this.a")]),o._v("自然就找到了"),_("code",[o._v("obj")]),o._v("对象中定义的"),_("code",[o._v("a")]),o._v("。这便是是"),_("code",[o._v("this")]),o._v("的隐式绑定规则。")]),o._v(" "),_("p",[_("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/21c66b5b1bb54785bfe256ebe6003a3b~tplv-k3u1fbpfcp-watermark.image?",alt:"屏幕截图(77).png"}})]),o._v(" "),_("h4",{attrs:{id:"隐式丢失"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#隐式丢失"}},[o._v("#")]),o._v(" - 隐式丢失")]),o._v(" "),_("ol",[_("li",[o._v("当隐式绑定的函数丢失了绑定对象，就会应用默认绑定。\n我们来看这段代码")])]),o._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[o._v("function foo(){\n    console.log(this.a);\n}\nvar obj = {\n    a:2,\n    foo:foo\n}\nvar bar = obj.foo\nvar a = 'global'\nbar()\n")])])]),_("p",[o._v("我们定义了"),_("code",[o._v("foo")]),o._v("函数、"),_("code",[o._v("obj")]),o._v("对象，但在外面我们又定义"),_("code",[o._v("bar")]),o._v("赋值"),_("code",[o._v("obj.foo")]),o._v("，之后我们在调用"),_("code",[o._v("bar")]),o._v("执行"),_("code",[o._v("foo")]),o._v("函数。在这种情况下"),_("code",[o._v("this.a")]),o._v("打印出来结果就是"),_("code",[o._v("global")]),o._v("。那为啥这里打印不是"),_("code",[o._v("2")]),o._v("呢？因为我们在"),_("code",[o._v("obj")]),o._v("对象中引用"),_("code",[o._v("foo")]),o._v("函数后，"),_("code",[o._v("obj")]),o._v("并没有执行"),_("code",[o._v("foo")]),o._v("函数，而是把它又丢给了"),_("code",[o._v("bar")]),o._v("，让"),_("code",[o._v("bar")]),o._v("变量执行了"),_("code",[o._v("foo")]),o._v("函数。"),_("code",[o._v("this")]),o._v("的隐式绑定就丢失了对象，从而又默认绑定在了"),_("code",[o._v("window")]),o._v("上了。自然在打印"),_("code",[o._v("this.a")]),o._v("时，"),_("code",[o._v("this")]),o._v("找到的"),_("code",[o._v("a")]),o._v("就是在全局定义的"),_("code",[o._v("a")]),o._v("了。这便是"),_("code",[o._v("this")]),o._v("的隐式丢失规则。")]),o._v(" "),_("p",[_("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a883f463a6a5478eaa09b2c47d308293~tplv-k3u1fbpfcp-watermark.image?",alt:"屏幕截图(76).png"}})]),o._v(" "),_("h4",{attrs:{id:"显式绑定"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#显式绑定"}},[o._v("#")]),o._v(" - 显式绑定")]),o._v(" "),_("ol",[_("li",[o._v("call，apply，bind方法可以强行指定函数的this对象\n我们看这段代码：")])]),o._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[o._v("function foo(){\n    console.log(this.a);\n}\nvar obj = {\n    a:2,\n}\nfoo.call(obj)\n    ||foo.apply(obj)\n    ||var bar = foo.bind(obj)\n      bar()\n\n")])])]),_("p",[o._v("我们定了"),_("code",[o._v("foo")]),o._v("函数、"),_("code",[o._v("obj")]),o._v("对象，如果现在直接调用"),_("code",[o._v("foo")]),o._v("函数，打印出来的"),_("code",[o._v("a")]),o._v("就是"),_("code",[o._v("undifind")]),o._v("。但是如果我们使用"),_("code",[o._v("foo.call(obj)")]),o._v(" || "),_("code",[o._v("foo.apply(obj)")]),o._v(" || "),_("code",[o._v("foo.bind(obj)")]),o._v("就可以强行将"),_("code",[o._v("this")]),o._v("指代的对象改为"),_("code",[o._v("obj")]),o._v("。让"),_("code",[o._v("this.a")]),o._v("打印出"),_("code",[o._v("2")]),o._v("。这便是"),_("code",[o._v("this")]),o._v("的先绑定规则。要注意的一点就是使用"),_("code",[o._v("bind")]),o._v("方法时返回的是个新的对象，要再次调用"),_("code",[o._v("bar")]),o._v("。")]),o._v(" "),_("p",[_("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cc264152853e470c8c4ee0671b2599c9~tplv-k3u1fbpfcp-watermark.image?",alt:"屏幕截图(78).png"}})]),o._v(" "),_("h2",{attrs:{id:"小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[o._v("#")]),o._v(" 小结")]),o._v(" "),_("p",[o._v("在我们使用"),_("code",[o._v("this")]),o._v("指代对象时，我们要分清到底是调用还是引用。只要我们能搞清"),_("code",[o._v("this")]),o._v("到底在什么地方引用了又在设么地方调用了。我们就可以清楚的知道"),_("code",[o._v("this")]),o._v("指代的对象到底是谁。自然也就能灵活运用"),_("code",[o._v("this")]),o._v("。")])])}),[],!1,null,null,null);v.default=a.exports}}]);